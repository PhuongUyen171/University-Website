#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TruongCNTP.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_TRUONGHOC")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHUONGTRINH(CHUONGTRINH instance);
    partial void UpdateCHUONGTRINH(CHUONGTRINH instance);
    partial void DeleteCHUONGTRINH(CHUONGTRINH instance);
    partial void InsertGIANGKHOA(GIANGKHOA instance);
    partial void UpdateGIANGKHOA(GIANGKHOA instance);
    partial void DeleteGIANGKHOA(GIANGKHOA instance);
    partial void InsertGIAOVIEN(GIAOVIEN instance);
    partial void UpdateGIAOVIEN(GIAOVIEN instance);
    partial void DeleteGIAOVIEN(GIAOVIEN instance);
    partial void InsertKETQUA(KETQUA instance);
    partial void UpdateKETQUA(KETQUA instance);
    partial void DeleteKETQUA(KETQUA instance);
    partial void InsertKHOA(KHOA instance);
    partial void UpdateKHOA(KHOA instance);
    partial void DeleteKHOA(KHOA instance);
    partial void InsertKHOAHOC(KHOAHOC instance);
    partial void UpdateKHOAHOC(KHOAHOC instance);
    partial void DeleteKHOAHOC(KHOAHOC instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertTINTUC(TINTUC instance);
    partial void UpdateTINTUC(TINTUC instance);
    partial void DeleteTINTUC(TINTUC instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_TRUONGHOCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHUONGTRINH> CHUONGTRINHs
		{
			get
			{
				return this.GetTable<CHUONGTRINH>();
			}
		}
		
		public System.Data.Linq.Table<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this.GetTable<GIANGKHOA>();
			}
		}
		
		public System.Data.Linq.Table<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this.GetTable<GIAOVIEN>();
			}
		}
		
		public System.Data.Linq.Table<KETQUA> KETQUAs
		{
			get
			{
				return this.GetTable<KETQUA>();
			}
		}
		
		public System.Data.Linq.Table<KHOA> KHOAs
		{
			get
			{
				return this.GetTable<KHOA>();
			}
		}
		
		public System.Data.Linq.Table<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this.GetTable<KHOAHOC>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<TINTUC> TINTUCs
		{
			get
			{
				return this.GetTable<TINTUC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUONGTRINH")]
	public partial class CHUONGTRINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCT;
		
		private string _TenCT;
		
		private EntitySet<GIANGKHOA> _GIANGKHOAs;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTChanging(string value);
    partial void OnMaCTChanged();
    partial void OnTenCTChanging(string value);
    partial void OnTenCTChanged();
    #endregion
		
		public CHUONGTRINH()
		{
			this._GIANGKHOAs = new EntitySet<GIANGKHOA>(new Action<GIANGKHOA>(this.attach_GIANGKHOAs), new Action<GIANGKHOA>(this.detach_GIANGKHOAs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCT", DbType="NVarChar(MAX)")]
		public string TenCT
		{
			get
			{
				return this._TenCT;
			}
			set
			{
				if ((this._TenCT != value))
				{
					this.OnTenCTChanging(value);
					this.SendPropertyChanging();
					this._TenCT = value;
					this.SendPropertyChanged("TenCT");
					this.OnTenCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_GIANGKHOA", Storage="_GIANGKHOAs", ThisKey="MaCT", OtherKey="MaCT")]
		public EntitySet<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this._GIANGKHOAs;
			}
			set
			{
				this._GIANGKHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_LOP", Storage="_LOPs", ThisKey="MaCT", OtherKey="MaCT")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = this;
		}
		
		private void detach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGKHOA")]
	public partial class GIANGKHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCT;
		
		private string _MaKhoa;
		
		private string _MaMH;
		
		private System.Nullable<int> _NamHoc;
		
		private System.Nullable<int> _HocKy;
		
		private System.Nullable<int> _SoTietLyThuyet;
		
		private System.Nullable<int> _SoTietThucHanh;
		
		private System.Nullable<int> _SoTC;
		
		private EntityRef<CHUONGTRINH> _CHUONGTRINH;
		
		private EntityRef<KHOA> _KHOA;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTChanging(string value);
    partial void OnMaCTChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnNamHocChanging(System.Nullable<int> value);
    partial void OnNamHocChanged();
    partial void OnHocKyChanging(System.Nullable<int> value);
    partial void OnHocKyChanged();
    partial void OnSoTietLyThuyetChanging(System.Nullable<int> value);
    partial void OnSoTietLyThuyetChanged();
    partial void OnSoTietThucHanhChanging(System.Nullable<int> value);
    partial void OnSoTietThucHanhChanged();
    partial void OnSoTCChanging(System.Nullable<int> value);
    partial void OnSoTCChanged();
    #endregion
		
		public GIANGKHOA()
		{
			this._CHUONGTRINH = default(EntityRef<CHUONGTRINH>);
			this._KHOA = default(EntityRef<KHOA>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					if (this._CHUONGTRINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Int")]
		public System.Nullable<int> NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int")]
		public System.Nullable<int> HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTietLyThuyet", DbType="Int")]
		public System.Nullable<int> SoTietLyThuyet
		{
			get
			{
				return this._SoTietLyThuyet;
			}
			set
			{
				if ((this._SoTietLyThuyet != value))
				{
					this.OnSoTietLyThuyetChanging(value);
					this.SendPropertyChanging();
					this._SoTietLyThuyet = value;
					this.SendPropertyChanged("SoTietLyThuyet");
					this.OnSoTietLyThuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTietThucHanh", DbType="Int")]
		public System.Nullable<int> SoTietThucHanh
		{
			get
			{
				return this._SoTietThucHanh;
			}
			set
			{
				if ((this._SoTietThucHanh != value))
				{
					this.OnSoTietThucHanhChanging(value);
					this.SendPropertyChanging();
					this._SoTietThucHanh = value;
					this.SendPropertyChanged("SoTietThucHanh");
					this.OnSoTietThucHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTC", DbType="Int")]
		public System.Nullable<int> SoTC
		{
			get
			{
				return this._SoTC;
			}
			set
			{
				if ((this._SoTC != value))
				{
					this.OnSoTCChanging(value);
					this.SendPropertyChanging();
					this._SoTC = value;
					this.SendPropertyChanged("SoTC");
					this.OnSoTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_GIANGKHOA", Storage="_CHUONGTRINH", ThisKey="MaCT", OtherKey="MaCT", IsForeignKey=true)]
		public CHUONGTRINH CHUONGTRINH
		{
			get
			{
				return this._CHUONGTRINH.Entity;
			}
			set
			{
				CHUONGTRINH previousValue = this._CHUONGTRINH.Entity;
				if (((previousValue != value) 
							|| (this._CHUONGTRINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUONGTRINH.Entity = null;
						previousValue.GIANGKHOAs.Remove(this);
					}
					this._CHUONGTRINH.Entity = value;
					if ((value != null))
					{
						value.GIANGKHOAs.Add(this);
						this._MaCT = value.MaCT;
					}
					else
					{
						this._MaCT = default(string);
					}
					this.SendPropertyChanged("CHUONGTRINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_GIANGKHOA", Storage="_KHOA", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.GIANGKHOAs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.GIANGKHOAs.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIANGKHOA", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.GIANGKHOAs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.GIANGKHOAs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAOVIEN")]
	public partial class GIAOVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _TenGV;
		
		private string _MatKhau;
		
		private string _MaMH;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnTenGVChanging(string value);
    partial void OnTenGVChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    #endregion
		
		public GIAOVIEN()
		{
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGV", DbType="NVarChar(MAX)")]
		public string TenGV
		{
			get
			{
				return this._TenGV;
			}
			set
			{
				if ((this._TenGV != value))
				{
					this.OnTenGVChanging(value);
					this.SendPropertyChanging();
					this._TenGV = value;
					this.SendPropertyChanged("TenGV");
					this.OnTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(10)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Char(10)")]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.GIAOVIENs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.GIAOVIENs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUA")]
	public partial class KETQUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSV;
		
		private string _MaMH;
		
		private int _LanThi;
		
		private System.Nullable<double> _Diem;
		
		private EntityRef<MONHOC> _MONHOC;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnLanThiChanging(int value);
    partial void OnLanThiChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    #endregion
		
		public KETQUA()
		{
			this._MONHOC = default(EntityRef<MONHOC>);
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanThi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LanThi
		{
			get
			{
				return this._LanThi;
			}
			set
			{
				if ((this._LanThi != value))
				{
					this.OnLanThiChanging(value);
					this.SendPropertyChanging();
					this._LanThi = value;
					this.SendPropertyChanged("LanThi");
					this.OnLanThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KETQUA", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_KETQUA", Storage="_SINHVIEN", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA")]
	public partial class KHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoa;
		
		private string _TenKhoa;
		
		private System.Nullable<int> _NamThanhLap;
		
		private EntitySet<GIANGKHOA> _GIANGKHOAs;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<MONHOC> _MONHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    partial void OnNamThanhLapChanging(System.Nullable<int> value);
    partial void OnNamThanhLapChanged();
    #endregion
		
		public KHOA()
		{
			this._GIANGKHOAs = new EntitySet<GIANGKHOA>(new Action<GIANGKHOA>(this.attach_GIANGKHOAs), new Action<GIANGKHOA>(this.detach_GIANGKHOAs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._MONHOCs = new EntitySet<MONHOC>(new Action<MONHOC>(this.attach_MONHOCs), new Action<MONHOC>(this.detach_MONHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(100)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamThanhLap", DbType="Int")]
		public System.Nullable<int> NamThanhLap
		{
			get
			{
				return this._NamThanhLap;
			}
			set
			{
				if ((this._NamThanhLap != value))
				{
					this.OnNamThanhLapChanging(value);
					this.SendPropertyChanging();
					this._NamThanhLap = value;
					this.SendPropertyChanged("NamThanhLap");
					this.OnNamThanhLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_GIANGKHOA", Storage="_GIANGKHOAs", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this._GIANGKHOAs;
			}
			set
			{
				this._GIANGKHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_LOPs", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_MONHOC", Storage="_MONHOCs", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<MONHOC> MONHOCs
		{
			get
			{
				return this._MONHOCs;
			}
			set
			{
				this._MONHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOAHOC")]
	public partial class KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoaHoc;
		
		private System.Nullable<int> _NamBatDau;
		
		private System.Nullable<int> _NamKetThuc;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaHocChanging(string value);
    partial void OnMaKhoaHocChanged();
    partial void OnNamBatDauChanging(System.Nullable<int> value);
    partial void OnNamBatDauChanged();
    partial void OnNamKetThucChanging(System.Nullable<int> value);
    partial void OnNamKetThucChanged();
    #endregion
		
		public KHOAHOC()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoaHoc", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoaHoc
		{
			get
			{
				return this._MaKhoaHoc;
			}
			set
			{
				if ((this._MaKhoaHoc != value))
				{
					this.OnMaKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._MaKhoaHoc = value;
					this.SendPropertyChanged("MaKhoaHoc");
					this.OnMaKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamBatDau", DbType="Int")]
		public System.Nullable<int> NamBatDau
		{
			get
			{
				return this._NamBatDau;
			}
			set
			{
				if ((this._NamBatDau != value))
				{
					this.OnNamBatDauChanging(value);
					this.SendPropertyChanging();
					this._NamBatDau = value;
					this.SendPropertyChanged("NamBatDau");
					this.OnNamBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamKetThuc", DbType="Int")]
		public System.Nullable<int> NamKetThuc
		{
			get
			{
				return this._NamKetThuc;
			}
			set
			{
				if ((this._NamKetThuc != value))
				{
					this.OnNamKetThucChanging(value);
					this.SendPropertyChanging();
					this._NamKetThuc = value;
					this.SendPropertyChanged("NamKetThuc");
					this.OnNamKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_LOP", Storage="_LOPs", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private string _MaKhoa;
		
		private string _MaKhoaHoc;
		
		private string _MaCT;
		
		private System.Nullable<int> _STT;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
		private EntityRef<CHUONGTRINH> _CHUONGTRINH;
		
		private EntityRef<KHOA> _KHOA;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnMaKhoaHocChanging(string value);
    partial void OnMaKhoaHocChanged();
    partial void OnMaCTChanging(string value);
    partial void OnMaCTChanged();
    partial void OnSTTChanging(System.Nullable<int> value);
    partial void OnSTTChanged();
    #endregion
		
		public LOP()
		{
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			this._CHUONGTRINH = default(EntityRef<CHUONGTRINH>);
			this._KHOA = default(EntityRef<KHOA>);
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(100)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="Char(10)")]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoaHoc", DbType="Char(10)")]
		public string MaKhoaHoc
		{
			get
			{
				return this._MaKhoaHoc;
			}
			set
			{
				if ((this._MaKhoaHoc != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._MaKhoaHoc = value;
					this.SendPropertyChanged("MaKhoaHoc");
					this.OnMaKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Char(10)")]
		public string MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					if (this._CHUONGTRINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int")]
		public System.Nullable<int> STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_SINHVIENs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINH_LOP", Storage="_CHUONGTRINH", ThisKey="MaCT", OtherKey="MaCT", IsForeignKey=true)]
		public CHUONGTRINH CHUONGTRINH
		{
			get
			{
				return this._CHUONGTRINH.Entity;
			}
			set
			{
				CHUONGTRINH previousValue = this._CHUONGTRINH.Entity;
				if (((previousValue != value) 
							|| (this._CHUONGTRINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUONGTRINH.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._CHUONGTRINH.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaCT = value.MaCT;
					}
					else
					{
						this._MaCT = default(string);
					}
					this.SendPropertyChanged("CHUONGTRINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_KHOA", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_LOP", Storage="_KHOAHOC", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc", IsForeignKey=true)]
		public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaKhoaHoc = value.MaKhoaHoc;
					}
					else
					{
						this._MaKhoaHoc = default(string);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private string _MaKhoa;
		
		private EntitySet<GIANGKHOA> _GIANGKHOAs;
		
		private EntitySet<GIAOVIEN> _GIAOVIENs;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    #endregion
		
		public MONHOC()
		{
			this._GIANGKHOAs = new EntitySet<GIANGKHOA>(new Action<GIANGKHOA>(this.attach_GIANGKHOAs), new Action<GIANGKHOA>(this.detach_GIANGKHOAs));
			this._GIAOVIENs = new EntitySet<GIAOVIEN>(new Action<GIAOVIEN>(this.attach_GIAOVIENs), new Action<GIAOVIEN>(this.detach_GIAOVIENs));
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(100)")]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="Char(10)")]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIANGKHOA", Storage="_GIANGKHOAs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<GIANGKHOA> GIANGKHOAs
		{
			get
			{
				return this._GIANGKHOAs;
			}
			set
			{
				this._GIANGKHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_GIAOVIENs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this._GIAOVIENs;
			}
			set
			{
				this._GIAOVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_KETQUA", Storage="_KETQUAs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_MONHOC", Storage="_KHOA", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.MONHOCs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.MONHOCs.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_GIANGKHOAs(GIANGKHOA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSV;
		
		private string _TenSV;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _Email;
		
		private string _HINH;
		
		private System.Nullable<int> _NamSinh;
		
		private string _MaLop;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnTenSVChanging(string value);
    partial void OnTenSVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    partial void OnNamSinhChanging(System.Nullable<int> value);
    partial void OnNamSinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSV", DbType="NVarChar(100)")]
		public string TenSV
		{
			get
			{
				return this._TenSV;
			}
			set
			{
				if ((this._TenSV != value))
				{
					this.OnTenSVChanging(value);
					this.SendPropertyChanging();
					this._TenSV = value;
					this.SendPropertyChanged("TenSV");
					this.OnTenSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="NVarChar(MAX)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Int")]
		public System.Nullable<int> NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Char(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_KETQUA", Storage="_KETQUAs", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINTUC")]
	public partial class TINTUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATIN;
		
		private string _TIEUDE;
		
		private string _NOIDUNG;
		
		private string _HINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATINChanging(string value);
    partial void OnMATINChanged();
    partial void OnTIEUDEChanging(string value);
    partial void OnTIEUDEChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    #endregion
		
		public TINTUC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATIN", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATIN
		{
			get
			{
				return this._MATIN;
			}
			set
			{
				if ((this._MATIN != value))
				{
					this.OnMATINChanging(value);
					this.SendPropertyChanging();
					this._MATIN = value;
					this.SendPropertyChanged("MATIN");
					this.OnMATINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDE", DbType="NVarChar(MAX)")]
		public string TIEUDE
		{
			get
			{
				return this._TIEUDE;
			}
			set
			{
				if ((this._TIEUDE != value))
				{
					this.OnTIEUDEChanging(value);
					this.SendPropertyChanging();
					this._TIEUDE = value;
					this.SendPropertyChanged("TIEUDE");
					this.OnTIEUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(MAX)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="VarChar(MAX)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
